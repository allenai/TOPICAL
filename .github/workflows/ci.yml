# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: ci

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11"]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Poetry
      uses: abatilo/actions-poetry@v2.1.4
      with:
        poetry-version: 1.5.1
    - name: Install dependencies with Poetry
      run: |
        poetry install --all-extras
    - name: Format code with black
      run: |
        poetry run black .
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        poetry run flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        poetry run flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    # TODO: Uncomment once we get type hints cleaned up locally
    # - name: Type check with mypy
    #   run: |
    #     poetry run mypy .    
    - name: Test with pytest
      run: |
        poetry run pytest tests --cov-config=.coveragerc --cov ./src --cov-report=xml
    # TODO: Need the codecov github app to be installed on the repo. See: https://docs.codecov.com/docs
    # - name: Upload coverage to Codecov
    #   uses: codecov/codecov-action@v2.1.0
    #   with:
    #     token: ${{ secrets.CODECOV_TOKEN }}
    #     file: ./coverage.xml